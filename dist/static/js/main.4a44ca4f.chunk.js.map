{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/SidebarSignInLinks.js","components/layout/SidebarSignOutLinks.js","components/layout/SideBar.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","SidebarSignOutLinks","Sidebar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this$props","links","uid","layout_SidebarSignInLinks","layout_SidebarSignOutLinks","Component","firebase","Navbar","sideDrawerOpen","toggleClick","bind","assertThisInitialized","setState","layout_SignedInLinks","layout_SignedOutLinks","sideLinks","SideBar","Link","data-target","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","concat","id","key","projects_ProjectSummary","Notifications","notifications","item","user","content","time","fromNow","Dashboard","projects_ProjectList","dashboard_Notifications","Redirect","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4a44ca4f.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right hide-on-med-and-down\">\n            <li><NavLink to=\"/create\" className=\"nav-link\">New Project</NavLink></li>\n            <li><a onClick={props.signOut} className=\"nav-link\">Log Out</a></li>\n            <li><NavLink to=\"/\" className=\"btn btn-floating btn-initals\">{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        // make async call to database\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password)\n            .then(() => {\n                dispatch({ type: 'LOGIN_SUCCESS' });\n            })\n            .catch((err) => {\n                dispatch({ type: 'LOGIN_ERROR', err });\n            });\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut()\n            .then(() => {\n                dispatch({ type: 'SIGNOUT_SUCCESS' })\n            })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase(); //to sign a new user up\n        const firestore = getFirestore(); //need access to db\n\n        firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password)\n        .then(resp => {\n            //create a record in a firestore for a new user\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            });\n        })\n        .then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' });\n        })\n        .catch((err) => {\n            dispatch({ type: 'SIGNUP_ERROR', err});\n        });\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n  return (\n    <div>\n      <ul className=\"right hide-on-med-and-down\">\n        <li><NavLink to='/sign-up' className=\"nav-link\">Signup</NavLink></li>\n        <li><NavLink to='/sign-in' className=\"nav-link\">Login</NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SidebarSignInLinks = (props) => {\n    return (\n        <ul className=\"side-links\">\n            <li><NavLink to=\"/\" className=\"btn btn-floating btn-initals-sidebar\">{props.profile.initials}</NavLink></li>\n            <li><NavLink to=\"/create\" >New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SidebarSignInLinks);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SidebarSignOutLinks = () => {\n    return (\n        <ul className=\"side-links\">\n            <li><NavLink to='/sign-up'>Signup</NavLink></li>\n            <li><NavLink to='/sign-in'>Login</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SidebarSignOutLinks;","import React, { Component } from 'react';\nimport SidebarSignInLinks from './SidebarSignInLinks';\nimport SidebarSignOutLinks from './SidebarSignOutLinks';\nimport { connect } from 'react-redux';\n\nclass Sidebar extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    render(){\n        const { auth, profile } = this.props;\n        const links = auth.uid ? <SidebarSignInLinks profile={profile}/> : <SidebarSignOutLinks/>;\n\n        return (\n            <div className=\"side-drawer hide-on-large-only\">\n                <div className=\"btn-close\" onClick={this.props.onClick}><i className=\"material-icons right\">close</i></div>\n                <div>\n                    {links}\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return{\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(Sidebar);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\nimport Sidebar from '../layout/SideBar';\n\nclass Navbar extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            sideDrawerOpen: false\n        }\n        this.toggleClick = this.toggleClick.bind(this);\n    }\n    toggleClick() {\n        this.setState({ sideDrawerOpen: !this.state.sideDrawerOpen })\n    }\n\n    render(){\n    const { auth, profile } = this.props;\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />;\n    const sideLinks = this.state.sideDrawerOpen ? <Sidebar onClick={this.toggleClick}/> : null;\n\n    return (\n        <nav className=\"nav-wrapper\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo logo\">rocket</Link>\n                <a className=\"sidenav-trigger\"  data-target=\"slide-out\" onClick={this.toggleClick}>\n                    <i className=\"material-icons\">menu</i>\n                </a>\n                {links}\n            </div>\n            {sideLinks}\n        </nav>\n    )\n}\n}\nconst mapStateToProps = (state) => {\n    // console.log(state)\n    return{\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"card z-depth-0 project-summary project-sum\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title white-text\">{project.title}</span>\n                <p className=\"grey-text\">Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"project-date\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({projects}) => {\n    return (\n        <div className=\"project-list section\">  \n            {projects && projects.map(project => {\n                return (\n                    <Link to={`/project/${project.id}`} key={project.id}>\n                        <ProjectSummary project={project}/>\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList;","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n    const { notifications } = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0 notifications\">\n                <div className=\"card-content notifications__content\">\n                    <span className=\"card-title white-text\">Notifications</span>\n                    <ul className=\"online-users users-list\">\n                        { notifications && notifications.map(item => {\n                            return <li className=\"grey-text\" key={item.id}>\n                                <span className=\"online-user__name\">{item.user} </span>\n                                <span>{item.content}</span>\n                                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n                            </li>\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications","import React, { Component } from 'react';\nimport ProjectList from '../projects/ProjectList';\nimport Notifications from './Notifications';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n    render() {\n        const { projects, auth, notifications } = this.props;\n        // check if user is logged in, otherwise redirect to login\n        if (!auth.uid) return <Redirect to='/sign-in' /> \n\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                    </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n  \nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([  //synch from firebase\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n    ])\n)(Dashboard)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props;\n    if (!auth.uid) return <Redirect to='/sign-in' /> \n\n    if(project) {\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0 project-sum\">\n                    <div className=\"card-content grey-text text-darken-3\">\n                        <span className=\"card-title project-title\">{project.title}</span>\n                        <p className=\"white-text\">{project.content}</p>\n                    </div>\n                    <div className=\"card-action\">\n                        <div className=\"grey-text\">Posted by {project.authorFirstName} {project.authorLastName}</div>\n                        <div className=\"project-date\">{moment(project.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project...</p>\n            </div>\n        )\n    }    \n}\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([{\n      collection: 'projects'\n    }])\n)(ProjectDetails);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n\n    render() {\n        const { authError, auth } = this.props;\n        if (auth.uid) return <Redirect to='/' /> \n\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"form-title\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn btn-form z-depth-0\">Login</button>\n                        <div className=\"center red-text\">\n                            { authError ? <p className=\"user-error\">{authError}</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }    \n}\n\nconst mapStateToProps = (state) => {\n    return{\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n  ","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n    render() {\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to='/' /> \n\n        return (\n        <div className=\"container\">\n            <form className=\"white\" onSubmit={this.handleSubmit}>\n            <h5 className=\"form-title\">Sign Up</h5>\n            <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" id='email' onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id='password' onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input type=\"text\" id='firstName' onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input type=\"text\" id='lastName' onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n                <button className=\"btn btn-form z-depth-0\">Sign Up</button>\n                <div className=\"center red-text\">\n                    { authError ? <p className=\"user-error\">{authError}</p> : null }\n                </div>\n            </div>\n            </form>\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n    return {\n        signUp: (creds) => dispatch(signUp(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state);\n        this.props.history.push('/');\n    }\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/sign-in' /> \n\n        return (\n        <div className=\"container\">\n            <form className=\"white\" onSubmit={this.handleSubmit}>\n                <h5 className=\"form-title\">Create a New Project</h5>\n                <div className=\"input-field\">\n                    <input type=\"text\" id='title' onChange={this.handleChange} />\n                    <label htmlFor=\"title\">Project Title</label>\n                </div>\n                <div className=\"input-field\">\n                    <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    <label htmlFor=\"content\">Project Content</label>\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn btn-form\">Create</button>\n                </div>\n            </form>\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_PROJECT', project });\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\n        })    \n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Sidebar from './components/layout/SideBar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <Navbar />\n                    <Switch>\n                        <Route exact path=\"/\" component={Dashboard}></Route>\n                        <Route exact path=\"/project/:id\" component={ProjectDetails}></Route>\n                        <Route exact path=\"/sign-in\" component={SignIn}></Route>\n                        <Route exact path=\"/sign-up\" component={SignUp}></Route>\n                        <Route exact path=\"/create\" component={CreateProject}></Route>\n                    </Switch>\n                </div>\n            </BrowserRouter>  \n        );\n    }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return {\n              authError: null\n            }\n        case 'LOGIN_ERROR':\n            console.log('login error');\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('logout success');\n            return {\n                authError: null\n            }\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return {\n            ...state,\n            authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return {\n            ...state,\n            authError: action.err.message\n            }\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;","const initState = {\n  projects: [\n    {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n    {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n    {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\n  ]\n};\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n      case 'CREATE_PROJECT':\n          console.log('created ', action.project);\n          return state;\n      case 'CREATE_PROJECT_ERROR':\n          console.log('create project error', action.err);\n          return state;\n      default:\n        return state;\n    }\n  \n};\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyAtmEgvo_6C7K_LSdgUUydp2zLVJpoD7jY\",\n    authDomain: \"project-app-74cae.firebaseapp.com\",\n    databaseURL: \"https://project-app-74cae.firebaseio.com\",\n    projectId: \"project-app-74cae\",\n    storageBucket: \"\",\n    messagingSenderId: \"489514955630\"\n};\n\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reactReduxFirebase(fbConfig, { userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true }), // redux binding for firebase, sync profile with firestore\n        reduxFirestore(fbConfig) // redux bindings for firestore\n    )\n);\n\n//  wait until firebase auth has initialized and then render (for nabvar link no to flick)\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n"],"sourceRoot":""}